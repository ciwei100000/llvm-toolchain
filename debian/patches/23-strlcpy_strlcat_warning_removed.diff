Index: llvm-toolchain-snapshot_3.4~svn192346/clang/include/clang/Basic/Builtins.def
===================================================================
--- llvm-toolchain-snapshot_3.4~svn192346.orig/clang/include/clang/Basic/Builtins.def	2013-10-10 13:37:58.942083196 +0200
+++ llvm-toolchain-snapshot_3.4~svn192346/clang/include/clang/Basic/Builtins.def	2013-10-10 13:37:58.930083198 +0200
@@ -467,8 +467,8 @@
 BUILTIN(__builtin___stpcpy_chk, "c*c*cC*z", "nF")
 BUILTIN(__builtin___strcat_chk, "c*c*cC*z", "nF")
 BUILTIN(__builtin___strcpy_chk, "c*c*cC*z", "nF")
-BUILTIN(__builtin___strlcat_chk, "zc*cC*zz", "nF")
-BUILTIN(__builtin___strlcpy_chk, "zc*cC*zz", "nF")
+//BUILTIN(__builtin___strlcat_chk, "zc*cC*zz", "nF")
+//BUILTIN(__builtin___strlcpy_chk, "zc*cC*zz", "nF")
 BUILTIN(__builtin___strncat_chk, "c*c*cC*zz", "nF")
 BUILTIN(__builtin___strncpy_chk, "c*c*cC*zz", "nF")
 BUILTIN(__builtin___stpncpy_chk, "c*c*cC*zz", "nF")
@@ -761,8 +761,8 @@
 LIBBUILTIN(_longjmp, "vJi",       "fr",    "setjmp.h", ALL_GNU_LANGUAGES)
 LIBBUILTIN(siglongjmp, "vSJi",    "fr",    "setjmp.h", ALL_GNU_LANGUAGES)
 // non-standard but very common
-LIBBUILTIN(strlcpy, "zc*cC*z",    "f",     "string.h", ALL_GNU_LANGUAGES)
-LIBBUILTIN(strlcat, "zc*cC*z",    "f",     "string.h", ALL_GNU_LANGUAGES)
+//LIBBUILTIN(strlcpy, "zc*cC*z",    "f",     "string.h", ALL_GNU_LANGUAGES)
+//LIBBUILTIN(strlcat, "zc*cC*z",    "f",     "string.h", ALL_GNU_LANGUAGES)
 //   id objc_msgSend(id, SEL, ...)
 LIBBUILTIN(objc_msgSend, "GGH.",   "f",     "objc/message.h", OBJC_LANG)
 // long double objc_msgSend_fpret(id self, SEL op, ...) 
Index: llvm-toolchain-snapshot_3.4~svn192346/clang/lib/Sema/SemaChecking.cpp
===================================================================
--- llvm-toolchain-snapshot_3.4~svn192346.orig/clang/lib/Sema/SemaChecking.cpp	2013-10-10 13:37:58.942083196 +0200
+++ llvm-toolchain-snapshot_3.4~svn192346/clang/lib/Sema/SemaChecking.cpp	2013-10-10 13:37:58.934083197 +0200
@@ -804,9 +804,10 @@
     return false;
 
   // Handle memory setting and copying functions.
-  if (CMId == Builtin::BIstrlcpy || CMId == Builtin::BIstrlcat)
-    CheckStrlcpycatArguments(TheCall, FnInfo);
-  else if (CMId == Builtin::BIstrncat)
+//  if (CMId == Builtin::BIstrlcpy || CMId == Builtin::BIstrlcat)
+//    CheckStrlcpycatArguments(TheCall, FnInfo);
+//  else
+  if (CMId == Builtin::BIstrncat)
     CheckStrncatArguments(TheCall, FnInfo);
   else
     CheckMemaccessArguments(TheCall, CMId, FnInfo);
Index: llvm-toolchain-snapshot_3.4~svn192346/clang/lib/AST/Decl.cpp
===================================================================
--- llvm-toolchain-snapshot_3.4~svn192346.orig/clang/lib/AST/Decl.cpp	2013-10-10 13:37:58.942083196 +0200
+++ llvm-toolchain-snapshot_3.4~svn192346/clang/lib/AST/Decl.cpp	2013-10-10 13:37:58.934083197 +0200
@@ -3010,10 +3010,10 @@
   case Builtin::BImemmove:
     return Builtin::BImemmove;
 
-  case Builtin::BIstrlcpy:
-    return Builtin::BIstrlcpy;
-  case Builtin::BIstrlcat:
-    return Builtin::BIstrlcat;
+//  case Builtin::BIstrlcpy:
+//    return Builtin::BIstrlcpy;
+//  case Builtin::BIstrlcat:
+//    return Builtin::BIstrlcat;
 
   case Builtin::BI__builtin_memcmp:
   case Builtin::BImemcmp:
Index: llvm-toolchain-snapshot_3.4~svn192346/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp
===================================================================
--- llvm-toolchain-snapshot_3.4~svn192346.orig/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp	2013-10-10 13:37:58.942083196 +0200
+++ llvm-toolchain-snapshot_3.4~svn192346/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp	2013-10-10 13:37:58.934083197 +0200
@@ -238,9 +238,9 @@
     case Builtin::BIstrncpy:
     case Builtin::BIstrncat:
       return TaintPropagationRule(1, 2, 0, true);
-    case Builtin::BIstrlcpy:
-    case Builtin::BIstrlcat:
-      return TaintPropagationRule(1, 2, 0, false);
+//    case Builtin::BIstrlcpy:
+//    case Builtin::BIstrlcat:
+//      return TaintPropagationRule(1, 2, 0, false);
     case Builtin::BIstrndup:
       return TaintPropagationRule(0, 1, ReturnValueIndex);
 
