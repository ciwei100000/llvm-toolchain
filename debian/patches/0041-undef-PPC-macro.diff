Index: llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h
===================================================================
--- llvm-toolchain_3.3~svn176561.orig/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	2012-12-20 06:13:09.000000000 +0100
+++ llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h	2013-03-06 18:51:26.640715166 +0100
@@ -47,6 +47,10 @@
                                          uint8_t OSABI);
 } // End llvm namespace
 
+// Generated files will use "namespace PPC". To avoid symbol clash,
+// undefine PPC here. PPC may be predefined on some hosts.
+#undef PPC
+
 // Defines symbolic names for PowerPC registers.  This defines a mapping from
 // register name to register number.
 //
Index: llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h
===================================================================
--- llvm-toolchain_3.3~svn176561.orig/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h	2012-12-20 06:13:09.000000000 +0100
+++ llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h	2013-03-06 18:51:26.640715166 +0100
@@ -17,6 +17,10 @@
 // GCC #defines PPC on Linux but we use it as our namespace name
 #undef PPC
 
+// Generated files will use "namespace PPC". To avoid symbol clash,
+// undefine PPC here. PPC may be predefined on some hosts.
+#undef PPC
+
 namespace llvm {
 namespace PPC {
   /// Predicate - These are "(BI << 5) | BO"  for various predicates.
Index: llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCFixupKinds.h
===================================================================
--- llvm-toolchain_3.3~svn176561.orig/lib/Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	2012-12-12 20:29:35.000000000 +0100
+++ llvm-toolchain_3.3~svn176561/lib/Target/PowerPC/MCTargetDesc/PPCFixupKinds.h	2013-03-06 18:51:26.640715166 +0100
@@ -12,6 +12,8 @@
 
 #include "llvm/MC/MCFixup.h"
 
+#undef PPC
+
 namespace llvm {
 namespace PPC {
 enum Fixups {
