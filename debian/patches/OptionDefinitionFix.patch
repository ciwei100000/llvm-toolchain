Index: llvm-toolchain-snapshot_8~svn343445/lldb/source/Commands/CommandObjectType.cpp
===================================================================
--- llvm-toolchain-snapshot_8~svn343445.orig/lldb/source/Commands/CommandObjectType.cpp
+++ llvm-toolchain-snapshot_8~svn343445/lldb/source/Commands/CommandObjectType.cpp
@@ -1013,6 +1013,14 @@ public:
             "type format clear", "Delete all existing format styles.") {}
 };
 
+
+static constexpr OptionDefinition g_type_formatter_list_options[] = {
+  // clang-format off
+  {LLDB_OPT_SET_1, false, "category-regex", 'w', OptionParser::eRequiredArgument, nullptr, {}, 0, eArgTypeName,     "Only show categories matching this filter."},
+  {LLDB_OPT_SET_2, false, "language",       'l', OptionParser::eRequiredArgument, nullptr, {}, 0, eArgTypeLanguage, "Only show the category for a specific language."}
+  // clang-format on
+};
+
 template <typename FormatterType>
 class CommandObjectTypeFormatterList : public CommandObjectParsed {
   typedef typename FormatterType::SharedPointer FormatterSharedPointer;
@@ -1055,13 +1063,7 @@ class CommandObjectTypeFormatterList : p
     }
 
     llvm::ArrayRef<OptionDefinition> GetDefinitions() override {
-      static constexpr OptionDefinition g_option_table[] = {
-          // clang-format off
-            {LLDB_OPT_SET_1, false, "category-regex", 'w', OptionParser::eRequiredArgument, nullptr, {}, 0, eArgTypeName,     "Only show categories matching this filter."},
-            {LLDB_OPT_SET_2, false, "language",       'l', OptionParser::eRequiredArgument, nullptr, {}, 0, eArgTypeLanguage, "Only show the category for a specific language."}
-          // clang-format on
-      };
-      return llvm::ArrayRef<OptionDefinition>(g_option_table);
+      return llvm::makeArrayRef(g_type_formatter_list_options);
     }
 
     // Instance variables to hold the values for command options.
