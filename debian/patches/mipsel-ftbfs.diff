Index: llvm-toolchain-snapshot_3.4~svn190996/lldb/source/Plugins/Process/Linux/LinuxSignals.cpp
===================================================================
--- llvm-toolchain-snapshot_3.4~svn190996.orig/lldb/source/Plugins/Process/Linux/LinuxSignals.cpp	2013-09-19 14:49:50.000000000 +0200
+++ llvm-toolchain-snapshot_3.4~svn190996/lldb/source/Plugins/Process/Linux/LinuxSignals.cpp	2013-09-19 14:49:50.000000000 +0200
@@ -45,7 +45,9 @@
     ADDSIGNAL(PIPE,   false,  true,  true, "write to pipe with reading end closed");
     ADDSIGNAL(ALRM,   false,  false, true, "alarm");
     ADDSIGNAL(TERM,   false,  true,  true, "termination requested");
+#ifdef SIGSTKFLT
     ADDSIGNAL(STKFLT, false,  true,  true, "stack fault");
+#endif
     ADDSIGNAL(CHLD,   false,  false, true, "child process exit");
     ADDSIGNAL(CONT,   false,  true,  true, "process continue");
     ADDSIGNAL(STOP,   false,  true,  true, "process stop");
Index: llvm-toolchain-snapshot_3.4~svn190996/lldb/source/Plugins/Process/Utility/RegisterContextMacOSXFrameBackchain.cpp
===================================================================
--- llvm-toolchain-snapshot_3.4~svn190996.orig/lldb/source/Plugins/Process/Utility/RegisterContextMacOSXFrameBackchain.cpp	2013-09-19 14:49:50.000000000 +0200
+++ llvm-toolchain-snapshot_3.4~svn190996/lldb/source/Plugins/Process/Utility/RegisterContextMacOSXFrameBackchain.cpp	2013-09-19 14:50:19.000000000 +0200
@@ -147,9 +147,9 @@
             }
             break;
 
-            // TOOD: need a better way to detect when "long double" types are 
+            // TOOD: need a better way to detect when "long double" types are
             // the same bytes size as "double"
-#if !defined(__arm__) && !defined(_MSC_VER)
+#if !defined(__arm__) && !defined(_MSC_VER) && !defined(__mips__)
         case sizeof (long double):
             if (sizeof (long double) == sizeof(uint32_t))
             {
